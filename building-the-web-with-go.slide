Building the Web with Go
"I wanna go fast" - Ricky Bobby
6 Feb 2017

Darwin Froese

* Outline

Why you should use go when building for the web.

* Major benefits

- It's truly concurrent
- Go code is simple to write
- Go was built for the web
- MIPS Support

* Go is truly concurrent

* 

Go wants your applications to be fast and concurrent. Providing built in utilities
to make your applications multi-threaded.

Spawning a new thread? Easy!

.code mthread.go

* 

Communicating between threads? Easy!

.play chanthread.go

* Go was built for the web

Go was built for the web first. This has a few advantages like:

- Easy to deploy webservers
- Cookie jars for clients
- Struct to Json to Struct conversions

* 

Build an entire web server by hand? Easy!

.play webserv.go

* 

Converting legacy json to more understandable json? Easy!

.play json-convert.go

* 

Use CookieJars to fake a client! Make automated testing of your servers easier.

.code cookie-jar.go


* 

We can even template our HTML files:

.play templating.go

* MIPS Support

Go is compiled down into machine code with support for many architectures (MIPS in 1.8)

This makes go one of the faster languages for web serving, comparable to C.

.link https://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=go&lang2=gcc Go vs C
.link https://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=go&lang2=gpp Go vs C++
.link https://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=go&lang2=node Go vs Javascript
.link https://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=go&lang2=python3 Go vs Python